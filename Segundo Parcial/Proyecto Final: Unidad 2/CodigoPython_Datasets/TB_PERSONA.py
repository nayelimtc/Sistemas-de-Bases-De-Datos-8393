# -*- coding: utf-8 -*-
"""TB_Persona.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1owhmixDppZY5thXX3V8QNYdo5jIXsrid

**Proyecto Final: Unidad 1**

**Entidad: TB_Persona**
"""

#Faker es un paquete de Python que genera datos falsos.
!pip install Faker

#Librerías necesarias para la generación de datos.
import pandas as pd
import uuid
import random
from faker import Faker
import datetime

#Librerías para generar cadena de numeros
import random as r
from random import seed

#Librerías para generar fechas
from random import randint
from datetime import datetime

#Variable asignada para el tamaño del conjunto de datos. 
num_iess = 5000

#Lista de 7 características (Atributos)
features = [
    "VAR_ID_PERSONA",
    "VAR_NOMBRE_PERSONA",
    "VAR_TEL_PERSONA",
    "VAR_GENERO_PERSONA",
    "DT_FECHA_NAC_PERSONA",
    "VAR_CORREO_PERSONA",
    "VAR_PROVINCIA_PERSONA",
    "VAR_CANTON_PERSONA",
    "VAR_PARROQUIA_PERSONA",
]# Creando un DF para estas características
df = pd.DataFrame(columns=features)

"""**nombre_persona**"""

#Variable para los géneros para la creación de los nombres.
genero = ["female", "male"]

#Nombres.
df['genero']= random.choices(
    genero, 
    weights=(30,30), 
    k=num_iess)

#Instancia Faker
faker = Faker()
#Función.
def name_gen(genero):
    #Para masculino
    if genero=='male':
        return faker.name_male()
    #Para femenino
    elif genero=='female':
        return faker.name_female()
    #Genera los nombres
    return faker.name()
df['VAR_NOMBRE_PERSONA'] = [name_gen(i) for i in df['genero']]

"""**ci_persona**"""

#Biblioteca uuid para generar cadena aleatoria de datos para id_afiliacion
df['VAR_ID_PERSONA'] = [uuid.uuid4().hex for i in range(num_iess)]

#Genera identificaciones únicas para cada usuario. Si todas las ID en el conjunto de datos son únicas, devuelve True.
print(df['VAR_ID_PERSONA'].nunique()==num_iess)

"""**tel_persona**"""

numero=[]
#Cantidad de números para la cadena..
size = 10
for i in range(0, num_iess):
  random.seed(datetime.now())
  #Números opcionales para formar la cadena.
  valores = [0,1,2,3,4,5,6,7,8,9]
  numero=(''.join([str(random.choice(valores)) for i in range(size)]))
  #Se guarda los números en telefonocallcenter.
  df.VAR_TEL_PERSONA[i]=numero

"""**genero_persona**"""

genders = ["Hombre", "Mujer"]

df['VAR_GENERO_PERSONA'] = random.choices(
    genders, 
    weights=(47,47), 
    k=num_iess
)
df.VAR_GENERO_PERSONA[i]=genders

"""**fecha_nac_persona**"""

def DT_FECHA_NAC_PERSONA(start, end, n):
    #Formato de marca de tiempo (año, mes, dia)
    frmt = "%d-%m-%Y"
    #Formateo de los dos períodos de tiempo.
    stime = datetime.strptime(start, frmt)
    etime = datetime.strptime(end, frmt)
    
    #Se crea el grupo para tiempos aleatorios.
    td = etime - stime
    
    #Se genera una lista con los tiempos aleatorios.
    times = [(random.random() * td + stime).strftime(frmt) for _ in range(n)]
    return times
df['DT_FECHA_NAC_PERSONA'] = DT_FECHA_NAC_PERSONA("01-01-1980", "01-01-2006", num_iess)

"""**correo_persona**"""

def emailGen(name, duplicateFound=False):
    """
    Genera una dirección de correo electrónico aleatoria basada en el nombre dado.
    Agrega un número al final si se encuentra una dirección duplicada.
    """
    #Nombre de dominio falso para usar.
    dom = "@gmail.com"
    
    #Minúsculas y división.
    name = name.lower().split(" ")
    
    #Carácter aleatorio para insertar en el nombre.
    chars = [".", "_"]
    
    new_name = name[0] + random.choice(chars) + name[1] 
    
    #Distinguir aún más el correo electrónico si se encontró un duplicad.
    if duplicateFound:
        
        #Número aleatorio para insertar al final.
        num = random.randint(0,100)
        
        #Insertando al final.
        new_name = new_name + str(num)
        
    #Devolver la dirección de correo electrónico con el nombre de dominio adjunto.
    return new_name + dom

emails = []

for name in df['VAR_NOMBRE_PERSONA']:
    
    # Generating the email
    email = emailGen(name)
    
    # Looping until a unique email is generated
    while email in emails:
        
        # Creating an email with a random number
        email = emailGen(name, duplicateFound=True)
    
    # Attaching the new email to the list
    emails.append(email)
    
df['VAR_CORREO_PERSONA'] = emails

#Los diferentes nombres de provincias.
VAR_PROVINCIA_PERSONA = ['Azuay','Bolivar','Cañar','Carchi','Chimborazo','Cotopaxi','El Oro','Esmeraldas','Galapagos','Guayanas','Imbabura','Loja','Los Rios','Manabi','Morona Santiago','Napo','Sucumbios','Pastaza','Pichincha','Santa Elena','Santo Domingo','Francisco de Orellana','Tungurahua','Zamora Chinchipe']
#Creacion de los permisos para cada una de las filas.
df['VAR_PROVINCIA_PERSONA'] = random.choices(
  VAR_PROVINCIA_PERSONA, 
    weights=(50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50), 
    k=num_iess
)

#Los diferentes nombres de cantones.
VAR_CANTON_PERSONA = ['Cuenca','Camilo Ponce Enriquez','Chordeleg','El Pan','Giron','Guachapala','Gualaceo','Nabon','Oña','Paute','Pucara','San Fernando','Santa Isabel','Sevilla de Oro','Sigsig','Guaranda','Caluma','Chillanes','Chimbo','Echeandia','Las Naves','San Miguel','Azogues','Biblian','Cañar','Deleg','El Tambo','La Troncal','Suscal','Tulcan','Bolivar','Espejo','Mira','Montufar','Huaca','Riobamba','Alausi','Chambo','Chunchi','Colta','Cumanda','Guamote','Guano','Pallatanga','Penipe','Latacunga','La Mana','Pangua','Pujili','Salcedo','Saquisili','Sigchos','Machala','Arenillas','Atahualpa','Balsas','Chilla','El Guabo','Huaquillas','Las Lajas','Marcabeli','Pasaje','Pinias','Portovelo','Santa Rosa','Zaruma','Esmeraldas','Atacames','Eloy Alfaro','Muisne','Quininde','Rioverde','San Lorenzo','San Cristobal','Isabela','Santa Cruz','Guayaquil','Alfredo Baquerizo','Balao','Balzar','Colimes','Daule','Duran','El Empalme','El Trinfo','Antonio Elizalde','Isidro Ayora','Lomas de Sargentillo','Marcelino Maridueña','Milagro','Naranjal','Naranjito','Nobol','Palestina','Pedro Carbo','Playas','Salitre','Samborondon','Santa Lucia','Simon Bolivar','Yaguanchi','Ibarra','Antonio Ante','Cotacachi','Otavalo','Pimampiro','San Miguel de Urcuqui','Loja','Calvas','Catamayo','Celica','Chaguarpamba','Espindola','Gonzanama','Camara','Olmedo','Paltas','Pindal','Puyango','Quilanga','Saraguro','Sozoranga','Zapotillo','Babahoyo','Baba','Buena Fe','Mocache','Montalvo','Palenque','Puebloviejo','Quevedo','Quinsaloma','Urdaneta','Valencia','Ventanas','Vinces','Portoviejo','24 de Mayo','Bolivar','Chone','El Carmen','Flavio Alfaro','Jama','Jaramijo','Jipijapa','Junin','Manta','Montecristi','Olmedo','Pajan','Pedernales','Pichincha','Puerto Lopez','Rocafuerte','San Vicente','Santa Ana','Sucre','Tosagua','Morona','Gualaquiza','Huamboya','Limon Indanza','Logroño','Pablo Sexto','Palora','San Juan Bosco','Santiago de Mendez','Sucua','Taisha','Tiwintza','Tena','Archidona','Carlos Julio Arosemena Tola','El Chaco','Quijos','Francisco de Orellana','Aguarico','La Joya de los Sachas','Loreto','Pastaza','Arajuno','Mera','Santa Clara','Quito','Cayambe','Mejia','Pedro Moncayo','Pedro Vicente Maldonado','Puerto Quito','Rumiñahui','San Miguel de los Bancos','Santa Elena','La Libertad','Salinas','Santo Domingo','La Concordia','Lago Agrio','Cascales','Cuyabeno','Gonzalo Pizarro','Putumayo','Shushufindi','Sucumbios','Ambato','Baños','Cevallos','Moncha','Matate','Quero','San Pedro de Pelileo','Santiago de Pillaro','Tisaleo','Zamora','Centinela del Condor','Chinchipe','El Pangui','Nangaritza','Palanda','Paquisha','Yacuambi','Yantzaza']
#Creacion de los permisos para cada una de las filas.
df['VAR_CANTON_PERSONA'] = random.choices(
  VAR_CANTON_PERSONA, 
    weights
    k=num_iess
)

#Los diferentes nombres de parroquias.
VAR_PARROQUIA_PERSONA = ['Bellavista','El Sangrario','Huaynacapac','San Blas','Totoracocha','Cuenca','Chaucha','Llacao','Nulti','Quingeo','Guanujo','Salinas','Simiatug','Chillanes','Telimbela','Echeandia','Bilovan','Regulo de Mora','Caluma','Balsapamba','Borrero','Azogues','Deleg','Rivera','Tusupamba','Jerusalen','Chontamarca','Tambo','Ducur','Pancho Negro','Pioter','El Chical','Garcia Moreno','San Rafael','El Angel','San Isidro','San Gabriel','La Paz','Piartal','Huaca','La Matriz','Latacunga','Las Pampas','Toacaso','La Mana','Ramon Campaña','La Victoria','Saquisili','Tingo','Pansaleo','Maldonado','Achupallas','Cañi','Capzol','Llagos','Cebadas','Ilapo','Valparaiso','La Candelaria','Cumanda','Machala','Chacras','Cordoncillo','San Jose','Chilla','La Iberia','Ecuador','Union Lojana','Casacay','Piedras','Esmeraldas','Maldonado','Muisne','Salima','Viche','Carondelet','Concepcion','La Union','Rioverde','Monterrey','Letamendi','Tarqui','Tenguel','Balzar','Santa Clara','El Recreo','Chobo','Taura','Tarifa','Isidro Ayora','Sagrario','Atuntaqui','Apuela','Quiroga','Otavalo','Pataqui','San Pablo','Chuga','Cahuasqui','San Blas','Sucre','Chile','El Tambo','Chaquinal','Amarillos','Nambacola','Larama','Lourdes','Ciano','Tacamoros','Caracol','Guare','San Juan','Quevedo','Mocache','Ricaurte','Zapotal','Palenque','Patricia Pilar','Mocache','Picoaza','Portoviejo','Calceta','Canuto','El Carmen','Zapallo','Los Esteros','Rocafuerte','Cojimies','Bellavista','Sinai','Rio Blanco','El Rosario','Pan de Azucar','Huamboya','Asuncion','Yaupi','Taisha','Tuutinentza','Shimpis','Tena','Puerto Napo','Archidona','Avila','Loreto','El Chaco','Oyacachi','Baeza','Cuyuja','Sumaco','Puyo','Canelos','Fatima','Pomona','Rio Tigre','Sarayacu','Tarqui','Mera','Madre Tierra','Shell','Carcelen','El Condado','Calacali','Cumbaya','El Quinche','Mindo','Pifo','Tumbaco','Cayambe','Aloag','Matriz','Ambato','Huachi Grande','Pasa','Cevallos','Patate','Quero','Pelileo','Salasaca','San Andres','El Limon','Guadalupe','Timbara','Chito','El Pangui','Tundayne','Zumbi','Palanda','Valladolid','Paquisha','Puerto Baquerizo Moreno','El Progreso','Santa Maria','Puerto Villamil','Tomas de Berlanga','Puerto Ayora','Bellavista','Santa Rosa','Dureno','Tarapoa','Santa Cecilia','Lumbaqui','Palma Roja','Pañacocha','La Bonita','La Sofia','Sevilla','Aguas Negras','Dayuma','El Eden','Tipitini','Cononaco','Tiputini','Yasuni','Pompeya','Rumipamba','Loreto','San José de Dahuano','Bomboli','Chiguilpe','Rio Toachi','Santo Domingo de los Colorados','Zaracay','Alluriquin','Luz de America','El Esfuerzo','Valle Hermoso','Santa Maria del Toachi','Ballenita','Santa Elena','Atahualpa','Colonche','Manglaralto','La Libertad','Carlos Espinoza Larrea','Santa Rosa','Salinas','Anconcito','Las Golondrinas','Manga del Cura','El Piedrerero','Rumipamba']
#Creacion de los permisos para cada una de las filas.
df['VAR_PARROQUIA_PERSONA'] = random.choices(
  VAR_PARROQUIA_PERSONA, 
    weights
    k=num_iess
)

#Eliminar genero, no es necesaerio para esta entidad.
del(df['genero'])

#Visualizar en la tabla los datos generados antes de descargar el excel.
df.head(5)

#Generar excel de los datos.
df.to_excel('TB_PERSONA.xlsx')
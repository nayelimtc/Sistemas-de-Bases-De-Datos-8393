# -*- coding: utf-8 -*-
"""TB_ROL.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oSJ4tRX00cVhTKOeuUJ55QVptzDVqmcu

**Proyecto Final: Unidad 1**

**Entidad: Rol**
"""

#Faker es un paquete de Python que genera datos falsos.
!pip install Faker

#Librerías necesarias para la generación de datos.
import pandas as pd
import uuid
import random
from faker import Faker
import datetime

#Librerías necesarias para el detalle o la descripción.
import string
import random
from random import seed
from datetime import datetime

#Variable asignada para el tamaño del conjunto de datos. 
num_iess = 5000

#Lista de 3 características (Atributos)
features = [
    "INT_COD_ROL",
    "VAR_NOMBRE_ROL",
    "VAR_DETALLE_ROL",
    "INT_ID_PERFIL",
]# Creando un DF para estas características
df = pd.DataFrame(columns=features)

"""**INT_COD_ROL'**"""

#Biblioteca uuid para generar cadena aleatoria de datos.
df['INT_COD_ROL'] = [uuid.uuid4().hex for i in range(num_iess)]

#Genera identificaciones únicas para cada usuario. Si todas las ID en el conjunto de datos son únicas, devuelve True.
print(df['INT_COD_ROL'].nunique()==num_iess)

"""**VAR_NOMBRE_ROL**"""

#Los diferentes nombres de roles.
VAR_NOMBRE_ROL = ['Pensionista','Afiliado']
#Creacion de los permisos para cada una de las filas
df['VAR_NOMBRE_ROL'] = random.choices(
  VAR_NOMBRE_ROL, 
    weights=(25,25), 
    k=num_iess
)

"""**VAR_DETALLE_ROL**"""

#Los diferentes nombres de roles.
VAR_DETALLE_ROL = ['Obra social','Incapacidad absoluta','Por el estado','Jubilacion','Incapacidad temporal','Partido politico','Asistencia por enfermedad','Asistencia por maternidad','Pension por vejez','Prestamo hipotecario']
#Creacion de los permisos para cada una de las filas.
df['VAR_DETALLE_ROL'] = random.choices(
  VAR_DETALLE_ROL, 
    weights=(50,50,50,50,50,50,50,50,50,50), 
    k=num_iess
)

"""**INT_ID_PERFIL**"""

#Biblioteca uuid para generar cadena aleatoria de datos.
df['INT_ID_PERFIL'] = [uuid.uuid4().hex for i in range(num_iess)]

#Genera identificaciones únicas para cada usuario. Si todas las ID en el conjunto de datos son únicas, devuelve True.
print(df['INT_ID_PERFIL'].nunique()==num_iess)

#Visualizar en la tabla los datos generados antes de descargar el excel.
df.head(5)

#Generar excel de los datos.
df.to_csv('TB_ROL.csv')